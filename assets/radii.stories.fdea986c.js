var i=Object.defineProperty;var n=(o,t)=>i(o,"name",{value:t,configurable:!0});import"./index.4a503249.js";import{c as e,A as d,M as c}from"./Props.e73b6694.js";import"./jsx-runtime.4a54aa4c.js";import"./iframe.e7295813.js";import{T as l}from"./TokensGrid.c11e5494.js";import{r as u}from"./index.b91014f9.js";import"./string.ff4cf23e.js";import"./index.c1364c4e.js";import"./es.map.constructor.e98133d6.js";import"./es.number.to-fixed.4440cc07.js";function p(){return p=Object.assign?Object.assign.bind():function(o){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var s in a)Object.prototype.hasOwnProperty.call(a,s)&&(o[s]=a[s])}return o},p.apply(this,arguments)}n(p,"_extends");const y={},f="wrapper";function m({components:o,...t}){return e(f,p({},y,t,{components:o,mdxType:"MDXLayout"}),e(c,{title:"Tokens/Radii",mdxType:"Meta"}),e("h1",null,"Radii"),e(l,{tokens:u,mdxType:"TokensGrid"}))}n(m,"MDXContent");m.isMDXComponent=!0;const x=n(()=>{throw new Error("Docs-only story")},"__page");x.parameters={docsOnly:!0};const r={title:"Tokens/Radii",includeStories:["__page"]},T={};r.parameters=r.parameters||{};r.parameters.docs={...r.parameters.docs||{},page:()=>e(d,{mdxStoryNameToKey:T,mdxComponentAnnotations:r},e(m,null))};const k=["__page"];export{k as __namedExportsOrder,x as __page,r as default};
//# sourceMappingURL=radii.stories.fdea986c.js.map
